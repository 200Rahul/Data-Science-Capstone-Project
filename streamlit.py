{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6385284e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "83783826",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import streamlit as st\n",
    "from sklearn import *\n",
    "import pickle"
   ]
  },
  {
   "cell_type": "raw",
   "id": "9e17b180",
   "metadata": {},
   "source": [
    "# Set page configuration\n",
    "st.set_page_config(page_title='Car Model Website', page_icon='ðŸš—', layout='wide')\n",
    "\n",
    "\n",
    "df = pickle.load(open('data.pkl', 'rb'))\n",
    "best_model = pickle.load(open('car_prediction.pkl', 'rb'))\n",
    "\n",
    "st.title('Car Selling Price Predictor')\n",
    "\n",
    "st.header('Fill the details to predict the Car price')\n",
    "\n",
    "# brand_name - drop down\n",
    "brand = st.selectbox('Brand', df['brand_name'].unique())\n",
    "# car_name - drop down\n",
    "car = st.selectbox('Car Name', df['car_name'].unique())\n",
    "# Year - drop down\n",
    "year = st.selectbox('Year', df['year'].unique())\n",
    "# KM Driven - number input\n",
    "km = st.number_input('KMs Driven')\n",
    "# fuel - drop down\n",
    "fuel = st.selectbox('Fuel', df['fuel'].unique())\n",
    "# seller_type - drop down\n",
    "seller_type = st.selectbox('Are you an Individual or a Dealer', df['seller_type'].unique())\n",
    "# transmission - drop down\n",
    "transmission = st.selectbox('Transmission', df['transmission'].unique())\n",
    "# owner - drop down\n",
    "owner = st.selectbox('Owner', df['owner'].unique())\n",
    "\n",
    "\n",
    "\n",
    "if st.button('Predict Car Price') :\n",
    "    test_data = np.array([brand, car, year, km, fuel, seller_type, transmission, owner])\n",
    "    test_data = test_data.reshape([1,8])\n",
    "\n",
    "    st.success(f\"Rs. {best_model.predict(test_data)[0].round(2)}\")"
   ]
  },
  {
   "cell_type": "raw",
   "id": "eb5b3302",
   "metadata": {},
   "source": [
    "from PIL import Image\n",
    "\n",
    "# Load and display the car image\n",
    "car_image = Image.open('C:\\Users\\Arti Rajawat\\OneDrive\\Documents\\webpage\\car_prediction.pkl')  # Replace 'car_image.jpg' with the path to your car image\n",
    "st.image(car_image, caption='Car Image', use_column_width=True)\n"
   ]
  },
  {
   "cell_type": "raw",
   "id": "27c5745a",
   "metadata": {},
   "source": [
    "from PIL import Image\n",
    "\n",
    "# Load and display the car image\n",
    "car_image = Image.open('C:\\Users\\Arti Rajawat\\OneDrive\\Documents\\webpage\\car_prediction.pkl')  # Replace 'car_image.jpg' with the path to your car image\n",
    "st.image(car_image, caption='Car Image', use_column_width=True)\n",
    "\n",
    "# Set page configuration\n",
    "st.set_page_config(page_title='Car Model Website', page_icon='ðŸš—', layout='wide')\n",
    "\n",
    "\n",
    "df = pickle.load(open('data.pkl', 'rb'))\n",
    "best_model = pickle.load(open('car_prediction.pkl', 'rb'))\n",
    "\n",
    "st.title('Car Selling Price Prediction')\n",
    "\n",
    "st.header('Fill the details to predict the Car price')\n",
    "\n",
    "# brand_name - drop down\n",
    "brand = st.selectbox('Brand', df['brand_name'].unique())\n",
    "# car_name - drop down\n",
    "car = st.selectbox('Car Name', df['car_name'].unique())\n",
    "# Year - drop down\n",
    "year = st.selectbox('Year', df['year'].unique())\n",
    "# KM Driven - number input\n",
    "km = st.number_input('KMs Driven')\n",
    "# fuel - drop down\n",
    "fuel = st.selectbox('Fuel', df['fuel'].unique())\n",
    "# seller_type - drop down\n",
    "seller_type = st.selectbox('Are you an Individual or a Dealer', df['seller_type'].unique())\n",
    "# transmission - drop down\n",
    "transmission = st.selectbox('Transmission', df['transmission'].unique())\n",
    "# owner - drop down\n",
    "owner = st.selectbox('Owner', df['owner'].unique())\n",
    "\n",
    "\n",
    "\n",
    "if st.button('Predict Car Price') :\n",
    "    test_data = np.array([brand, car, year, km, fuel, seller_type, transmission, owner])\n",
    "    test_data = test_data.reshape([1,8])\n",
    "\n",
    "    st.success(f\"Rs. {best_model.predict(test_data)[0].round(2)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d13e129f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pickle\n",
    "import numpy as np\n",
    "from PIL import Image\n",
    "\n",
    "# Load and display the car image\n",
    "car_image = Image.open(\"C:\\\\Users\\\\Arti Rajawat\\\\OneDrive\\\\Documents\\\\webpage\\\\__pycache__\\\\car image.jpeg\")\n",
    "st.image(car_image, caption='Car Image', use_column_width=True)\n",
    "\n",
    "# Set page configuration\n",
    "st.set_page_config(page_title='Car Model Website', page_icon='ðŸš—', layout='wide')\n",
    "\n",
    "# Custom color scheme\n",
    "COLOR_THEME = '#00FF00'  # Green color code\n",
    "BACKGROUND_COLOR = '#F0F0F0'  # Background color code\n",
    "CUSTOM_CSS = f\"\"\"\n",
    "<style>\n",
    "body {{\n",
    "    color: {COLOR_THEME};\n",
    "    background-color: {BACKGROUND_COLOR};\n",
    "}}\n",
    "button {{\n",
    "    background-color: {COLOR_THEME} !important;\n",
    "}}\n",
    "</style>\n",
    "\"\"\"\n",
    "st.markdown(CUSTOM_CSS, unsafe_allow_html=True)\n",
    "\n",
    "df = pickle.load(open('data.pkl', 'rb'))\n",
    "best_model = pickle.load(open('car_prediction.pkl', 'rb'))\n",
    "\n",
    "st.title('Car Selling Price Prediction')\n",
    "\n",
    "st.header('Fill in the details to predict the car price')\n",
    "\n",
    "# Brand name - drop-down\n",
    "brand = st.selectbox('Brand', df['brand_name'].unique())\n",
    "\n",
    "# Car name - drop-down\n",
    "car = st.selectbox('Car Name', df['car_name'].unique())\n",
    "\n",
    "# Year - drop-down\n",
    "year = st.selectbox('Year', df['year'].unique())\n",
    "\n",
    "# KM Driven - number input\n",
    "km = st.number_input('KMs Driven')\n",
    "\n",
    "# Fuel - drop-down\n",
    "fuel = st.selectbox('Fuel', df['fuel'].unique())\n",
    "\n",
    "# Seller type - drop-down\n",
    "seller_type = st.selectbox('Are you an Individual or a Dealer', df['seller_type'].unique())\n",
    "\n",
    "# Transmission - drop-down\n",
    "transmission = st.selectbox('Transmission', df['transmission'].unique())\n",
    "\n",
    "# Owner - drop-down\n",
    "owner = st.selectbox('Owner', df['owner'].unique())\n",
    "\n",
    "if st.button('Predict Car Price'):\n",
    "    test_data = np.array([brand, car, year, km, fuel, seller_type, transmission, owner])\n",
    "    test_data = test_data.reshape([1, 8])\n",
    "\n",
    "    st.success(f\"Rs. {best_model.predict(test_data)[0].round(2)}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "171e9c84",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
